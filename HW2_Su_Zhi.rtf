{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green128\blue0;\red0\green0\blue0;\red0\green0\blue255;
\red163\green21\blue21;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c50200\c0;\csgenericrgb\c0\c0\c0;\csgenericrgb\c0\c0\c100000;
\csgenericrgb\c63900\c8200\c8200;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 /* -*- Mode: C; c-basic-offset:4 ; indent-tabs-mode:nil ; -*- */\cf3 \
\cf2 /*\
 *  (C) 2001 by Argonne National Laboratory.\
 *      See COPYRIGHT in top-level directory.\
 */\cf3 \
\
\cf4 #include \cf5 <stdio.h>\cf4 \
#include \cf5 "mpi.h"\cf4 \
\cf3 \
\cf4 int\cf3  main(\cf4 int\cf3  argc, \cf4 char\cf3  *argv[])\
\{\
    \cf4 int\cf3  rank;\
    \cf4 int\cf3  size;\
\
    MPI_Init(0, 0);\
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);\
    MPI_Comm_size(MPI_COMM_WORLD, &size);\
    \cf4 char\cf3  processor_name[MPI_MAX_PROCESSOR_NAME];\
    \cf4 int\cf3  name_len;\
    \cf4 int\cf3  i;\
    \cf4 char\cf3  name[50]=\cf5 ""\cf3 ;\
    MPI_Get_processor_name(processor_name, &name_len);\
    \cf4 if\cf3 (rank!=0)\
    \{\
        strcpy(name,processor_name);\
        MPI_Send(name,50,MPI_CHAR,0,0,MPI_COMM_WORLD);\
    \}\
    \cf4 else\cf3 \
    \{\
        \cf4 for\cf3  (i=size-1;i>0;i--)\
        \{\
            MPI_Recv(name,50,MPI_CHAR,i, 0,\
                MPI_COMM_WORLD, MPI_STATUS_IGNORE);\
            printf(\cf5 "Hello world from process %s, rank %d of %d\\n"\cf3 ,name,i,size);\
        \}\
        printf(\cf5 "Hello world from process %s, rank %d of %d\\n"\cf3 ,processor_name,rank,size);\
    \}\
    MPI_Finalize();\
    \cf4 return\cf3  0;\
\}\
}