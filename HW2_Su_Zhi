/* -*- Mode: C; c-basic-offset:4 ; indent-tabs-mode:nil ; -*- */
/*
 *  (C) 2001 by Argonne National Laboratory.
 *      See COPYRIGHT in top-level directory.
 */

#include <stdio.h>
#include "mpi.h"

int main(int argc, char *argv[])
{
    int rank;
    int size;

    MPI_Init(0, 0);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    char processor_name[MPI_MAX_PROCESSOR_NAME];
    int name_len;
    int i;
    char name[50]="";
    MPI_Get_processor_name(processor_name, &name_len);
    if(rank!=0)
    {
        strcpy(name,processor_name);
        MPI_Send(name,50,MPI_CHAR,0,0,MPI_COMM_WORLD);
    }
    else
    {
        for (i=size-1;i>0;i--)
        {
            MPI_Recv(name,50,MPI_CHAR,i, 0,
                MPI_COMM_WORLD, MPI_STATUS_IGNORE);
            printf("Hello world from process %s, rank %d of %d\n",name,i,size);
        }
        printf("Hello world from process %s, rank %d of %d\n",processor_name,rank,size);
    }
    MPI_Finalize();
    return 0;
}
